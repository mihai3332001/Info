#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfoOras.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="City")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBilet(Bilet instance);
    partial void UpdateBilet(Bilet instance);
    partial void DeleteBilet(Bilet instance);
    partial void InsertTransport(Transport instance);
    partial void UpdateTransport(Transport instance);
    partial void DeleteTransport(Transport instance);
    partial void InsertJudet(Judet instance);
    partial void UpdateJudet(Judet instance);
    partial void DeleteJudet(Judet instance);
    partial void InsertLocatie(Locatie instance);
    partial void UpdateLocatie(Locatie instance);
    partial void DeleteLocatie(Locatie instance);
    partial void InsertOra(Ora instance);
    partial void UpdateOra(Ora instance);
    partial void DeleteOra(Ora instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CityConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bilet> Bilets
		{
			get
			{
				return this.GetTable<Bilet>();
			}
		}
		
		public System.Data.Linq.Table<Transport> Transports
		{
			get
			{
				return this.GetTable<Transport>();
			}
		}
		
		public System.Data.Linq.Table<Judet> Judets
		{
			get
			{
				return this.GetTable<Judet>();
			}
		}
		
		public System.Data.Linq.Table<Locatie> Locaties
		{
			get
			{
				return this.GetTable<Locatie>();
			}
		}
		
		public System.Data.Linq.Table<Ora> Oras
		{
			get
			{
				return this.GetTable<Ora>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bilet")]
	public partial class Bilet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _Pret;
		
		private string _Timp;
		
		private EntityRef<Bilet> _Bilet2;
		
		private EntitySet<Transport> _Transports;
		
		private EntityRef<Bilet> _Bilet1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPretChanging(decimal value);
    partial void OnPretChanged();
    partial void OnTimpChanging(string value);
    partial void OnTimpChanged();
    #endregion
		
		public Bilet()
		{
			this._Bilet2 = default(EntityRef<Bilet>);
			this._Transports = new EntitySet<Transport>(new Action<Transport>(this.attach_Transports), new Action<Transport>(this.detach_Transports));
			this._Bilet1 = default(EntityRef<Bilet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Bilet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pret", DbType="Decimal(3,2) NOT NULL")]
		public decimal Pret
		{
			get
			{
				return this._Pret;
			}
			set
			{
				if ((this._Pret != value))
				{
					this.OnPretChanging(value);
					this.SendPropertyChanging();
					this._Pret = value;
					this.SendPropertyChanged("Pret");
					this.OnPretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timp", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Timp
		{
			get
			{
				return this._Timp;
			}
			set
			{
				if ((this._Timp != value))
				{
					this.OnTimpChanging(value);
					this.SendPropertyChanging();
					this._Timp = value;
					this.SendPropertyChanged("Timp");
					this.OnTimpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bilet_Bilet", Storage="_Bilet2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Bilet Bilet2
		{
			get
			{
				return this._Bilet2.Entity;
			}
			set
			{
				Bilet previousValue = this._Bilet2.Entity;
				if (((previousValue != value) 
							|| (this._Bilet2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bilet2.Entity = null;
						previousValue.Bilet1 = null;
					}
					this._Bilet2.Entity = value;
					if ((value != null))
					{
						value.Bilet1 = this;
					}
					this.SendPropertyChanged("Bilet2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bilet_Transport", Storage="_Transports", ThisKey="ID", OtherKey="BiletID")]
		public EntitySet<Transport> Transports
		{
			get
			{
				return this._Transports;
			}
			set
			{
				this._Transports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bilet_Bilet", Storage="_Bilet1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Bilet Bilet1
		{
			get
			{
				return this._Bilet1.Entity;
			}
			set
			{
				Bilet previousValue = this._Bilet1.Entity;
				if (((previousValue != value) 
							|| (this._Bilet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bilet1.Entity = null;
						previousValue.Bilet2 = null;
					}
					this._Bilet1.Entity = value;
					if ((value != null))
					{
						value.Bilet2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Bilet1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.Bilet = this;
		}
		
		private void detach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.Bilet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transport")]
	public partial class Transport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrasID;
		
		private int _BiletID;
		
		private string _Transport1;
		
		private byte _GMS;
		
		private EntityRef<Bilet> _Bilet;
		
		private EntityRef<Ora> _Ora;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrasIDChanging(int value);
    partial void OnOrasIDChanged();
    partial void OnBiletIDChanging(int value);
    partial void OnBiletIDChanged();
    partial void OnTransport1Changing(string value);
    partial void OnTransport1Changed();
    partial void OnGMSChanging(byte value);
    partial void OnGMSChanged();
    #endregion
		
		public Transport()
		{
			this._Bilet = default(EntityRef<Bilet>);
			this._Ora = default(EntityRef<Ora>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrasID", DbType="Int NOT NULL")]
		public int OrasID
		{
			get
			{
				return this._OrasID;
			}
			set
			{
				if ((this._OrasID != value))
				{
					if (this._Ora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrasIDChanging(value);
					this.SendPropertyChanging();
					this._OrasID = value;
					this.SendPropertyChanged("OrasID");
					this.OnOrasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiletID", DbType="Int NOT NULL")]
		public int BiletID
		{
			get
			{
				return this._BiletID;
			}
			set
			{
				if ((this._BiletID != value))
				{
					if (this._Bilet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBiletIDChanging(value);
					this.SendPropertyChanging();
					this._BiletID = value;
					this.SendPropertyChanged("BiletID");
					this.OnBiletIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Transport", Storage="_Transport1", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Transport1
		{
			get
			{
				return this._Transport1;
			}
			set
			{
				if ((this._Transport1 != value))
				{
					this.OnTransport1Changing(value);
					this.SendPropertyChanging();
					this._Transport1 = value;
					this.SendPropertyChanged("Transport1");
					this.OnTransport1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMS", DbType="TinyInt NOT NULL")]
		public byte GMS
		{
			get
			{
				return this._GMS;
			}
			set
			{
				if ((this._GMS != value))
				{
					this.OnGMSChanging(value);
					this.SendPropertyChanging();
					this._GMS = value;
					this.SendPropertyChanged("GMS");
					this.OnGMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bilet_Transport", Storage="_Bilet", ThisKey="BiletID", OtherKey="ID", IsForeignKey=true)]
		public Bilet Bilet
		{
			get
			{
				return this._Bilet.Entity;
			}
			set
			{
				Bilet previousValue = this._Bilet.Entity;
				if (((previousValue != value) 
							|| (this._Bilet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bilet.Entity = null;
						previousValue.Transports.Remove(this);
					}
					this._Bilet.Entity = value;
					if ((value != null))
					{
						value.Transports.Add(this);
						this._BiletID = value.ID;
					}
					else
					{
						this._BiletID = default(int);
					}
					this.SendPropertyChanged("Bilet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ora_Transport", Storage="_Ora", ThisKey="OrasID", OtherKey="ID", IsForeignKey=true)]
		public Ora Ora
		{
			get
			{
				return this._Ora.Entity;
			}
			set
			{
				Ora previousValue = this._Ora.Entity;
				if (((previousValue != value) 
							|| (this._Ora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ora.Entity = null;
						previousValue.Transports.Remove(this);
					}
					this._Ora.Entity = value;
					if ((value != null))
					{
						value.Transports.Add(this);
						this._OrasID = value.ID;
					}
					else
					{
						this._OrasID = default(int);
					}
					this.SendPropertyChanged("Ora");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Judet")]
	public partial class Judet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrasID;
		
		private string _Judet1;
		
		private EntityRef<Ora> _Ora;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrasIDChanging(int value);
    partial void OnOrasIDChanged();
    partial void OnJudet1Changing(string value);
    partial void OnJudet1Changed();
    #endregion
		
		public Judet()
		{
			this._Ora = default(EntityRef<Ora>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrasID", DbType="Int NOT NULL")]
		public int OrasID
		{
			get
			{
				return this._OrasID;
			}
			set
			{
				if ((this._OrasID != value))
				{
					if (this._Ora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrasIDChanging(value);
					this.SendPropertyChanging();
					this._OrasID = value;
					this.SendPropertyChanged("OrasID");
					this.OnOrasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Judet", Storage="_Judet1", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Judet1
		{
			get
			{
				return this._Judet1;
			}
			set
			{
				if ((this._Judet1 != value))
				{
					this.OnJudet1Changing(value);
					this.SendPropertyChanging();
					this._Judet1 = value;
					this.SendPropertyChanged("Judet1");
					this.OnJudet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ora_Judet", Storage="_Ora", ThisKey="OrasID", OtherKey="ID", IsForeignKey=true)]
		public Ora Ora
		{
			get
			{
				return this._Ora.Entity;
			}
			set
			{
				Ora previousValue = this._Ora.Entity;
				if (((previousValue != value) 
							|| (this._Ora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ora.Entity = null;
						previousValue.Judets.Remove(this);
					}
					this._Ora.Entity = value;
					if ((value != null))
					{
						value.Judets.Add(this);
						this._OrasID = value.ID;
					}
					else
					{
						this._OrasID = default(int);
					}
					this.SendPropertyChanged("Ora");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locatie")]
	public partial class Locatie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrasID;
		
		private string _Restaurant;
		
		private string _Scoala;
		
		private string _Institutie;
		
		private EntityRef<Ora> _Ora;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrasIDChanging(int value);
    partial void OnOrasIDChanged();
    partial void OnRestaurantChanging(string value);
    partial void OnRestaurantChanged();
    partial void OnScoalaChanging(string value);
    partial void OnScoalaChanged();
    partial void OnInstitutieChanging(string value);
    partial void OnInstitutieChanged();
    #endregion
		
		public Locatie()
		{
			this._Ora = default(EntityRef<Ora>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrasID", DbType="Int NOT NULL")]
		public int OrasID
		{
			get
			{
				return this._OrasID;
			}
			set
			{
				if ((this._OrasID != value))
				{
					if (this._Ora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrasIDChanging(value);
					this.SendPropertyChanging();
					this._OrasID = value;
					this.SendPropertyChanged("OrasID");
					this.OnOrasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Restaurant", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Restaurant
		{
			get
			{
				return this._Restaurant;
			}
			set
			{
				if ((this._Restaurant != value))
				{
					this.OnRestaurantChanging(value);
					this.SendPropertyChanging();
					this._Restaurant = value;
					this.SendPropertyChanged("Restaurant");
					this.OnRestaurantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scoala", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Scoala
		{
			get
			{
				return this._Scoala;
			}
			set
			{
				if ((this._Scoala != value))
				{
					this.OnScoalaChanging(value);
					this.SendPropertyChanging();
					this._Scoala = value;
					this.SendPropertyChanged("Scoala");
					this.OnScoalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Institutie", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Institutie
		{
			get
			{
				return this._Institutie;
			}
			set
			{
				if ((this._Institutie != value))
				{
					this.OnInstitutieChanging(value);
					this.SendPropertyChanging();
					this._Institutie = value;
					this.SendPropertyChanged("Institutie");
					this.OnInstitutieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ora_Locatie", Storage="_Ora", ThisKey="OrasID", OtherKey="ID", IsForeignKey=true)]
		public Ora Ora
		{
			get
			{
				return this._Ora.Entity;
			}
			set
			{
				Ora previousValue = this._Ora.Entity;
				if (((previousValue != value) 
							|| (this._Ora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ora.Entity = null;
						previousValue.Locaties.Remove(this);
					}
					this._Ora.Entity = value;
					if ((value != null))
					{
						value.Locaties.Add(this);
						this._OrasID = value.ID;
					}
					else
					{
						this._OrasID = default(int);
					}
					this.SendPropertyChanged("Ora");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Oras")]
	public partial class Ora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Oras;
		
		private System.Nullable<decimal> _Lat;
		
		private System.Nullable<decimal> _Long;
		
		private EntitySet<Transport> _Transports;
		
		private EntitySet<Judet> _Judets;
		
		private EntitySet<Locatie> _Locaties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrasChanging(string value);
    partial void OnOrasChanged();
    partial void OnLatChanging(System.Nullable<decimal> value);
    partial void OnLatChanged();
    partial void OnLongChanging(System.Nullable<decimal> value);
    partial void OnLongChanged();
    #endregion
		
		public Ora()
		{
			this._Transports = new EntitySet<Transport>(new Action<Transport>(this.attach_Transports), new Action<Transport>(this.detach_Transports));
			this._Judets = new EntitySet<Judet>(new Action<Judet>(this.attach_Judets), new Action<Judet>(this.detach_Judets));
			this._Locaties = new EntitySet<Locatie>(new Action<Locatie>(this.attach_Locaties), new Action<Locatie>(this.detach_Locaties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oras", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Oras
		{
			get
			{
				return this._Oras;
			}
			set
			{
				if ((this._Oras != value))
				{
					this.OnOrasChanging(value);
					this.SendPropertyChanging();
					this._Oras = value;
					this.SendPropertyChanged("Oras");
					this.OnOrasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Decimal(12,9)")]
		public System.Nullable<decimal> Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Long", DbType="Decimal(12,9)")]
		public System.Nullable<decimal> Long
		{
			get
			{
				return this._Long;
			}
			set
			{
				if ((this._Long != value))
				{
					this.OnLongChanging(value);
					this.SendPropertyChanging();
					this._Long = value;
					this.SendPropertyChanged("Long");
					this.OnLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ora_Transport", Storage="_Transports", ThisKey="ID", OtherKey="OrasID")]
		public EntitySet<Transport> Transports
		{
			get
			{
				return this._Transports;
			}
			set
			{
				this._Transports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ora_Judet", Storage="_Judets", ThisKey="ID", OtherKey="OrasID")]
		public EntitySet<Judet> Judets
		{
			get
			{
				return this._Judets;
			}
			set
			{
				this._Judets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ora_Locatie", Storage="_Locaties", ThisKey="ID", OtherKey="OrasID")]
		public EntitySet<Locatie> Locaties
		{
			get
			{
				return this._Locaties;
			}
			set
			{
				this._Locaties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.Ora = this;
		}
		
		private void detach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.Ora = null;
		}
		
		private void attach_Judets(Judet entity)
		{
			this.SendPropertyChanging();
			entity.Ora = this;
		}
		
		private void detach_Judets(Judet entity)
		{
			this.SendPropertyChanging();
			entity.Ora = null;
		}
		
		private void attach_Locaties(Locatie entity)
		{
			this.SendPropertyChanging();
			entity.Ora = this;
		}
		
		private void detach_Locaties(Locatie entity)
		{
			this.SendPropertyChanging();
			entity.Ora = null;
		}
	}
}
#pragma warning restore 1591
